<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- システムが起動すると、標準ブロードキャスト (standard broadcast) として
         android.intent.action.BOOT_COMPLETED が一度だけ送られます。以下は，それを受け取るためのパーミッションです。-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

    <!-- バイブレータを利用するには権限の追加が必要です。 -->
    <uses-permission android:name="android.permission.VIBRATE" />

    <!-- Android 13（API レベル 33）では、アプリから除外対象外の通知を送信する新しい実行時の権限 POST_NOTIFICATIONS が導入されました。 -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <!-- Bluetooth 関連の従来の権限宣言では、android:maxSdkVersion を 30 (Android 11, "R") に設定します。-->
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION"/>

    <!-- Android 12 では、BLUETOOTH_SCAN、BLUETOOTH_ADVERTISE、BLUETOOTH_CONNECT 権限が導入されています。
         これにより、アプリは位置情報の利用許可をリクエストせずに付近のデバイスをスキャンできます。
         これらの権限を宣言するには、アプリが Android 12 をターゲットとする必要があります。 -->
    <!-- アプリがすでにペア設定されている Bluetooth デバイスと通信する場合は、アプリのマニフェストに BLUETOOTH_CONNECT 権限を追加します。 -->
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <!-- Bluetooth Low Energy（BLE）周辺機器など、アプリが Bluetooth デバイスを探す場合は、アプリのマニフェストに BLUETOOTH_SCAN 権限を追加します。 -->
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN"
        tools:remove="android:usesPermissionFlags" />
    />

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.INTERNET"/>


    <application
        android:label="my_beacon_test24"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:usesCleartextTraffic="true">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <service android:name="org.altbeacon.beacon.service.BeaconService" tools:node="replace" android:foregroundServiceType="location">
            <meta-data android:name="longScanForcingEnabled" android:value="true"/>
        </service>

        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>
